{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["marked","require","App","props","update","event","this","setState","markdown","target","value","state","bind","className","id","rows","cols","onChange","dangerouslySetInnerHTML","__html","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAGMA,EAAOC,EAAQ,IAwCNC,E,kDArCb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IASVC,OAAO,SAASC,GACdC,KAAKC,SAAS,CAACC,SAASH,EAAMI,OAAOC,SATnC,EAAKC,MAAM,CACTH,SAAS,21BAGX,EAAKJ,OAAO,EAAKA,OAAOQ,KAAZ,gBANI,E,0CAcpB,WAAS,IACAJ,EAAUF,KAAKK,MAAfH,SACP,OACE,sBAAKK,UAAU,YAAf,UACE,gCACA,oDACA,gCACA,wCACA,0BAAUC,GAAG,SAAUC,KAAK,KAAKC,KAAK,KAAKH,UAAU,eAAeH,MAAOF,EAC3ES,SAAUX,KAAKF,eAGf,gCACE,2CACA,qBAAKU,GAAG,UAAUI,wBAA2B,CAACC,OAAOnB,EAAOQ,gB,GA7BlDY,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.055b0b64.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\n\nconst marked=require(\"marked\");\n\nclass App extends Component{\n  constructor(props){\n    super(props);\n    this.state={\n      markdown:'# Welcome to my project. \\n ## Here is some **git command**. \\n \\n  To initiate a repository \\'git init\\'  \\n To add file to your repo \\'git add .\\'  \\n  To commit \\'git commit -m \"message\"\\'  \\n   \\'git remote add origin \"url of your repo\"\\'  \\n  \\'git push origin master\\' \\n \\'git pull origin master\\'  \\n  To check status on GitHub use the command `git status`.  \\n   You can do other things in GitHub such as reset. \\n```\\nx = 2\\ny = 2\\nz = x + y\\nprint(z)\\n5\\n ```  \\n* Satyam Gupta  \\n[British Computer Society](https://www.bcs.org) \\n\\nThere are blockquotes\\n> Thank you for your kind words\\n\\nImage Links  \\n ![Google Logo](http://www.google.com/images/errors/logo_sm.gif)\\n## Computing  \\n* Word Processing - include **Clipart Images, Headers and Footers** \\n* Spreadsheets - include **Charts and Formula** \\n* Presentations - include **Slide Layouts** '\n    };\n    //bindind this\n    this.update=this.update.bind(this);\n  }\n//Updating markdown on change of form\n\nupdate=function(event){\n  this.setState({markdown:event.target.value});\n}\n\nrender(){\n  const {markdown}=this.state;\n  return(\n    <div className=\"container\">\n      <div>\n      <h1>Markdown Previewer</h1>\n      <div>\n      <h2>Editor</h2>\n      <textarea id=\"editor\"  rows=\"15\" cols=\"40\" className=\"form-control\" value={markdown}\n      onChange={this.update}/>\n      </div>\n      </div>\n      <div >\n        <h2>Previewer</h2>\n        <div id=\"preview\" dangerouslySetInnerHTML = {{__html:marked(markdown)}}>\n        </div>\n      </div>\n    </div>\n    );\n}\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}